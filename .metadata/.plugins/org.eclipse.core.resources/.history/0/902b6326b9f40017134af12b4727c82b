------------------------------------------------------------------------------
--  File: mux.vhd
------------------------------------------------------------------------------
--Multiplexer design
--Control signal is CONT_SIG
--The output is chosen from 2 signals with length 8 bits
--If control signal is '1' then input A_in is chosen 
--If '0' then input B_IN is chosen to the output OUT_SIG


library IEEE;
use IEEE.std_logic_1164.all;

--Multiplexer entity
 entity Mux is
  port ( A_IN     : in std_logic;
         B_IN     : in std_logic;
         CONT_SIG : in  std_logic;
         OUT_SIG_BEH  : out std_logic;
         OUT_SIG_FLOW  : out std_logic;
         OUT_SIG_STRUCT  : out std_logic);
  end Mux;
  
--Architecture of the multiplexer
architecture RTL of Mux is
-- komponentide prototüübid
-- AND
component and_gate is 
port (a : in std_logic;
		 b : in std_logic;
		 o : out std_logic);
end component;
-- OR
component or_gate is 
port (a : in std_logic;
		 b : in std_logic;
		 o : out std_logic);
end component;
-- NOT
component not_gate is 
port (a : in std_logic;
		 o : out std_logic);
end component;

-- deklareeri abisignaalid
signal inv_and, a_f_o, a_s_o : std_logic;
begin
 
--Behavioural process DISP_MUX
DISP_MUX: process ( A_IN, B_IN, CONT_SIG ) -- tundlikuse nimistu 
  begin
    if CONT_SIG = '1' then
       OUT_SIG_BEH <= A_IN;
    elsif CONT_SIG = '0' then
       OUT_SIG_BEH <= B_IN;
    else
       OUT_SIG_BEH <= 'X';
    end if;
end process DISP_MUX;

-- andmevoo kirjeldusstiil
OUT_SIG_FLOW  <= (A_IN and CONT_SIG) or (B_IN and not(CONT_SIG));

-- struktuurne kirjeldusstiil  
a_f : and_gate port map (A_IN, CONT_SIG, a_f_o);
a_s : and_gate port map (B_IN, inv_and, a_s_o);
inv : not_gate port map (CONT_SIG, inv_and);
o_f : or_gate port map (a_f_o, a_s_o, OUT_SIG_STRUCT);

end RTL;
