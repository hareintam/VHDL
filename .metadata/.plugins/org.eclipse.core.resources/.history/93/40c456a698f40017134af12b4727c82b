--testpink ALU-le erinevate sisendite andmiseks ja väljundi testimiseks

LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
ENTITY ALU_TB IS
END ALU_TB;

ARCHITECTURE testbench OF ALU_TB IS 
 
    -- testitava komponendi deklareerimine
	component ALU is
	    Port ( 	a : in  STD_LOGIC_VECTOR (3 downto 0);
				b : in  STD_LOGIC_VECTOR (3 downto 0);
				op : in STD_LOGIC_VECTOR (1 downto 0);
				o : out  STD_LOGIC_VECTOR (3 downto 0));				
	end component;
    
   --testpingi sisendid
   signal a_tb : std_logic_vector(3 downto 0) := (others => '0'); -- 4 bitine sisend
   signal b_tb : std_logic_vector(3 downto 0) := (others => '0'); -- 4 bitine sisend
   signal op_tb : std_logic_vector(1 downto 0) := (others => '0'); -- 4 bitine sisend
  
   --testpingi väljundid
   signal o_tb : std_logic_vector(3 downto 0); -- 4 bitine väljund

begin --arhitektuuri algus
	   --komponendi ALU port map (komponendi sisendite ja väljundite ühendamine testpingi sisendite ja väljunditega)
	   uut: ALU port map (
          a => a_tb,
          b => b_tb,
          op => op_tb,
          o => o_tb
        ); 

process --protsess testpingi sisendite väärtustamiseks
begin
	
	--kõik testikomplektid on üles ehitatud järgnevast loogikast lähtudes
	report "Test case 1";
	a_tb <= "1111"; --signaalile a antakse väärtus
	b_tb <= "0000"; --signaalile b antakse väärtus
	
	--samade a ja b väärtustega teostatakse kõik 4 ALU operatsiooni ning iga 10ns tagant kajastub neist järgmise tulemus ALU väljundis
	op_tb <= "00"; --ALU väljundis kajastub funktsiooni 1 tulemus (A, B cnt 1)
	wait for 10ns;
	op_tb <= "01"; --ALU väljundis kajastub funktsiooni 2 tulemus (ror A)
	wait for 10ns;
	op_tb <= "10"; --ALU väljundis kajastub funktsiooni 3 tulemus (clr A, B)
	wait for 10ns;
	op_tb <= "11"; --ALU väljundis kajastub funktsiooni 4 tulemus (A xor B)
	wait for 10ns;
	
	report "Test case 2";
	a_tb <= "1111";
	b_tb <= "0001";
	
	op_tb <= "00";
	wait for 10ns;
	op_tb <= "01";
	wait for 10ns;
	op_tb <= "10";
	wait for 10ns;
	op_tb <= "11";
	wait for 10ns;
	
	report "Test case 3";
	a_tb <= "1111";
	b_tb <= "0010";
	
	op_tb <= "00";
	wait for 10ns;
	op_tb <= "01";
	wait for 10ns;
	op_tb <= "10";
	wait for 10ns;
	op_tb <= "11";
	wait for 10ns;
	
	report "Test case 4";
	a_tb <= "1111";
	b_tb <= "0011";
	
	op_tb <= "00";
	wait for 10ns;
	op_tb <= "01";
	wait for 10ns;
	op_tb <= "10";
	wait for 10ns;
	op_tb <= "11";
	wait for 10ns;
	
	report "Test case 5";
	a_tb <= "0001";
	b_tb <= "0111";
	
	op_tb <= "00";
	wait for 10ns;
	op_tb <= "01";
	wait for 10ns;
	op_tb <= "10";
	wait for 10ns;
	op_tb <= "11";
	wait for 10ns;
	
	report "Test case 6";
	a_tb <= "1000";
	b_tb <= "0111";
	
	op_tb <= "00";
	wait for 10ns;
	op_tb <= "01";
	wait for 10ns;
	op_tb <= "10";
	wait for 10ns;
	op_tb <= "11";
	wait for 10ns;
	
	report "Test case 7";
	a_tb <= "0000";
	b_tb <= "0000";
	
	op_tb <= "00";
	wait for 10ns;
	op_tb <= "01";
	wait for 10ns;
	op_tb <= "10";
	wait for 10ns;
	op_tb <= "11";
	wait for 10ns;
		
	wait;
end process;

end testbench;